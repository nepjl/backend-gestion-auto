// controllers/userController.js
const pool = require('../config/db');
const bcrypt = require('bcrypt');
const jwt = require('jsonwebtoken');

const userController = {
  login: async (req, res) => {
    const { email, motDePasse } = req.body;

    try {
      const result = await pool.query('SELECT * FROM utilisateurs WHERE email = $1', [email]);
      const user = result.rows[0];

      if (!user || !(await bcrypt.compare(motDePasse, user.motDePasse))) {
        return res.status(401).json({ message: 'Email ou mot de passe incorrect.' });
      }

      const token = jwt.sign({ id: user.id }, process.env.JWT_SECRET, { expiresIn: '1h' });
      res.json({ token });
    } catch (error) {
      console.error(error);
      res.status(500).json({ message: 'Erreur lors de la connexion.' });
    }
  },

  logout: (req, res) => {
    // Pour la déconnexion, on peut simplement supprimer le token côté client
    res.json({ message: 'Déconnexion réussie.' });
  },
};

module.exports = userController;


// controllers/vehiculeController.js
const pool = require('../config/db');

const vehiculeController = {
  ajouterVehicule: async (req, res) => {
    const { marque, modele, annee, immatriculation } = req.body;

    try {
      const result = await pool.query(
        'INSERT INTO vehicules (marque, modele, annee, immatriculation) VALUES ($1, $2, $3, $4) RETURNING *',
        [marque, modele, annee, immatriculation]
      );
      res.status(201).json(result.rows[0]);
    } catch (error) {
      console.error(error);
      res.status(500).json({ message: 'Erreur lors de l\'ajout du véhicule.' });
    }
  },

  supprimerVehicule: async (req, res) => {
    const { id } = req.params;

    try {
      await pool.query('DELETE FROM vehicules WHERE id = $1', [id]);
      res.status(204).send();
    } catch (error) {
      console.error(error);
      res.status(500).json({ message: 'Erreur lors de la suppression du véhicule.' });
    }
  },

  modifierVehicule: async (req, res) => {
    const { id } = req.params;
    const { marque, modele, annee, immatriculation } = req.body;

    try {
      const result = await pool.query(
        'UPDATE vehicules SET marque = $1, modele = $2, annee = $3, immatriculation = $4 WHERE id = $5 RETURNING *',
        [marque, modele, annee, immatriculation, id]
      );
      res.json(result.rows[0]);
    } catch (error) {
      console.error(error);
      res.status(500).json({ message: 'Erreur lors de la mise à jour du véhicule.' });
    }
  },

  afficherVehicules: async (req, res) => {
    try {
      const result = await pool.query('SELECT * FROM vehicules');
      res.json(result.rows);
    } catch (error) {
      console.error(error);
      res.status(500).json({ message: 'Erreur lors de l\'affichage des véhicules.' });
    }
  },
};

module.exports = vehiculeController;
